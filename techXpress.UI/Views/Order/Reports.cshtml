@model techXpress.UI.VMs.Orders.OrderReportsVM
@{
    ViewData["Title"] = "Order Reports";
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<div class="container-fluid py-4">
    <div class="row mb-4">
        <div class="col-12">
            <div class="card bg-dark text-white">
                <div class="card-body">
                    <h2 class="card-title">
                        <i class="bi bi-graph-up"></i> Order Analytics Dashboard
                    </h2>
                    <p class="card-text">Comprehensive overview of your store's performance</p>
                </div>
            </div>
        </div>
        <a asp-controller="Order" asp-action="GetReportPDF" class="btn btn-secondary">Download Report</a>
    </div>

    <div class="row g-4 mb-4">
        <div class="col-xl-3 col-sm-6">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-uppercase mb-1">Total Orders</h6>
                            <h3 class="mb-0">@Model.TotalOrders</h3>
                        </div>
                        <div class="rounded-circle bg-primary-light p-3">
                            <i class="bi bi-cart fs-3"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-uppercase mb-1">Total Revenue</h6>
                            <h3 class="mb-0">$@Model.TotalRevenue.ToString("N2")</h3>
                        </div>
                        <div class="rounded-circle bg-success-light p-3">
                            <i class="bi bi-currency-dollar fs-3"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6">
            <div class="card bg-warning text-dark">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-uppercase mb-1">Pending Orders</h6>
                            <h3 class="mb-0">@Model.PendingOrders</h3>
                        </div>
                        <div class="rounded-circle bg-warning-light p-3">
                            <i class="bi bi-hourglass-split fs-3"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-xl-3 col-sm-6">
            <div class="card bg-info text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div>
                            <h6 class="text-uppercase mb-1">Completed Orders</h6>
                            <h3 class="mb-0">@Model.CompletedOrders</h3>
                        </div>
                        <div class="rounded-circle bg-info-light p-3">
                            <i class="bi bi-check-circle fs-3"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row g-4 mb-4">
        <div class="col-xl-8">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">Monthly Revenue</h5>
                </div>
                <div class="card-body chart-container">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>

        <div class="col-xl-4">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">Order Status Distribution</h5>
                </div>
                <div class="card-body chart-container">
                    <canvas id="statusChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-light">
                    <h5 class="card-title mb-0">Recent Orders</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Customer</th>
                                    <th>Date</th>
                                    <th>Status</th>
                                    <th>Amount</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var order in Model.RecentOrders)
                                {
                                    <tr>
                                        <td>#@order.OrderId</td>
                                        <td>@order.UserEmail</td>
                                        <td>@order.OrderDate.ToString("MMM dd, yyyy")</td>
                                        <td>
                                            <span class="badge bg-@(order.OrderStatus.ToLower() switch {
                                                "pending" => "warning",
                                                "shipped" => "success",
                                                "canceled" => "danger",
                                                _ => "secondary"
                                            })">@order.OrderStatus</span>
                                        </td>
                                        <td>$@order.TotalAmount.ToString("N2")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .bg-primary-light { background-color: rgba(13, 110, 253, 0.2); }
    .bg-success-light { background-color: rgba(25, 135, 84, 0.2); }
    .bg-warning-light { background-color: rgba(255, 193, 7, 0.2); }
    .bg-info-light { background-color: rgba(13, 202, 240, 0.2); }
    
    .card {
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        border: none;
        margin-bottom: 1rem;
    }
    
    .card-header {
        border-bottom: none;
        background: transparent;
        padding: 1.5rem;
    }
    
    .card-body {
        padding: 1.5rem;
    }
    
    .chart-container {
        position: relative;
        height: 300px;
        width: 100%;
    }
    
    .table > :not(caption) > * > * {
        padding: 1rem;
    }
</style>

@section Scripts {
    <script>
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');
        new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: @Json.Serialize(Model.MonthlyRevenue.Select(x => x.Month)),
                datasets: [{
                    label: 'Revenue',
                    data: @Json.Serialize(Model.MonthlyRevenue.Select(x => x.Revenue)),
                    borderColor: '#0d6efd',
                    tension: 0.4,
                    fill: true,
                    backgroundColor: 'rgba(13, 110, 253, 0.1)'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        display: false
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return '$' + value.toLocaleString();
                            }
                        }
                    }
                }
            }
        });

        const statusCtx = document.getElementById('statusChart').getContext('2d');
        new Chart(statusCtx, {
            type: 'doughnut',
            data: {
                labels: @Json.Serialize(Model.OrderStatusDistribution.Select(x => x.Status)),
                datasets: [{
                    data: @Json.Serialize(Model.OrderStatusDistribution.Select(x => x.Count)),
                    backgroundColor: [
                        '#0d6efd',
                        '#198754',
                        '#dc3545',
                        '#ffc107',
                        '#6c757d'
                    ]
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: true,
                plugins: {
                    legend: {
                        position: 'bottom'
                    }
                }
            }
        });
    </script>
}
