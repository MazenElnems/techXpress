@using Microsoft.AspNetCore.Identity
@model IEnumerable<IdentityRole<Guid>>

@{
    ViewData["Title"] = "Roles";
}

<div class="container">
    <h1>Roles</h1>
    <div class="row">
        <div class="col-md-12">
            <a asp-action="Create" class="btn btn-primary">Create Role</a>
        </div>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Role Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var role in Model)
            {
                <tr>
                    <td>@role.Name</td>
                    <td>
                        <a asp-action="Update" asp-controller="Role" asp-route-id="@role.Id" class="btn btn-warning">Edit</a>
                        <a onclick="deleteRole('api/role/delete/@role.Id')" class="btn btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts{
    <script>
        async function deleteRole(url) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(url, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        const data = await response.json();

                        if (response.ok) {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: data.message
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message
                                });
                            }
                        } else {
                            throw new Error('Something went wrong');
                        }
                    } catch (error) {
                        console.log(error);
                    }
                }
            });
        }
    </script>
}