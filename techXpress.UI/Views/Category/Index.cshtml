@using techXpress.UI.VMs.Category
@model IEnumerable<CategoryVM>
@{
    ViewData["Title"] = "Category Management";
}

<style>
    .card {
        background-color: #1f1f1f;
        color: #f5f5f5;
    }

    .card-header {
        background-color: #1f1f1f;
        color: #f5f5f5;
    }

    .btn-outline-light {
        color: #f5f5f5;
        border-color: #f5f5f5;
    }

    .btn-outline-light:hover {
        background-color: #f5f5f5;
        color: #121212;
    }

    .btn-light {
        background-color: #2a2a2a;
        color: #f5f5f5;
        border: 1px solid #444;
    }

    .btn-light:hover {
        background-color: #f5f5f5;
        color: #121212;
    }

    .table {
        background-color: #1f1f1f;
        color: #f5f5f5;
    }

    .table thead th {
        background-color: #2a2a2a;
        color: #f5f5f5;
    }

    .table tbody tr:hover {
        background-color: #2a2a2a;
    }
</style>

<div class="container py-4">
    <div class="card shadow-sm rounded-3">
        <div class="card-header bg-primary text-white py-3 d-flex justify-content-between align-items-center">
            <h4 class="mb-0 fw-bold">Category Management</h4>
            <div>
                <a asp-action="Create" asp-controller="Category" class="btn btn-light me-2 mb-2 mb-md-0">
                    <i class="bi bi-plus-circle"></i> Create New Category
                </a>
                <a asp-action="Index" asp-controller="Home" class="btn btn-outline-light">
                    <i class="bi bi-house"></i> Back To Home
                </a>
            </div>
        </div>
        <div class="card-body p-4">
            <partial name="_NotificationPartial" />

            <div class="table-responsive">
                <table class="table table-hover">
                    <thead class="table-light">
                        <tr>
                            <th>Category Name</th>
                            <th class="text-end">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach(var category in Model)
                        {
                            <tr>
                                <td>@category.Name</td>
                                <td class="text-end">
                                    <div class="d-flex justify-content-end gap-2">
                                        <a asp-action="Update" asp-controller="Category" asp-route-id="@category.CategoryId" class="btn btn-primary btn-sm">
                                            <i class="bi bi-pencil"></i> Edit
                                        </a>
                                        <a onclick="deleteCategory('/api/category/delete/@category.CategoryId')" class="btn btn-danger btn-sm">
                                            <i class="bi bi-trash"></i> Delete
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function deleteCategory(url) {
            Swal.fire({
                title: "Are you sure?",
                text: "You won't be able to revert this!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, delete it!"
            }).then(async (result) => {
                if (result.isConfirmed) {
                    try {
                        const response = await fetch(url, {
                            method: 'DELETE',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        const data = await response.json();

                        if (response.ok) {
                            if (data.success) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Success',
                                    text: data.message
                                }).then(() => {
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Error',
                                    text: data.message
                                });
                            }
                        } else {
                            throw new Error('Something went wrong');
                        }
                    } catch (error) {
                        console.log(error);
                    }
                }
            });
        }
    </script>
}
