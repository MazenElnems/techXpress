@using System.Security.Claims
@using techXpress.UI.VMs.Products
@model ProductDetailsVM

<link rel="stylesheet" href="~/css/theme.css" />
<style>
    /* Product Showcase */
    .product-showcase {
        background-color: var(--dark-bg);
        border-radius: 1.5rem;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow-lg);
        position: relative;
        overflow: hidden;
    }

    .product-showcase::before {
        content: '';
        position: absolute;
        width: 300px;
        height: 300px;
        background: rgba(250, 204, 21, 0.03);
        border-radius: 50%;
        top: -150px;
        right: -150px;
        z-index: 0;
    }

    .product-image-wrapper {
        background-color: rgba(255, 255, 255, 0.03);
        border-radius: 1rem;
        padding: 2rem;
        height: 450px;
        display: flex;
        align-items: center;
        justify-content: center;
        position: relative;
        overflow: hidden;
    }

    .product-image {
        max-height: 100%;
        max-width: 100%;
        object-fit: contain;
    }

    .product-badges {
        position: absolute;
        top: 1rem;
        left: 1rem;
        z-index: 10;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .product-badge {
        font-size: 0.75rem;
        font-weight: 600;
        padding: 0.5rem 0.75rem;
        border-radius: 2rem;
        text-transform: uppercase;
        letter-spacing: 0.5px;
    }

    .badge-new {
        background-color: var(--primary-color);
        color: var(--dark-bg);
    }

    .badge-stock {
        background-color: var(--success-color);
        color: white;
    }

    .badge-out {
        background-color: var(--danger-color);
        color: white;
    }

    .product-title {
        font-size: 2.5rem;
        font-weight: 700;
        margin-bottom: 1rem;
        color: var(--light-text);
        line-height: 1.2;
        position: relative;
    }

    .product-title::after {
        content: '';
        display: block;
        width: 50px;
        height: 4px;
        background: var(--primary-color);
        margin-top: 0.75rem;
        border-radius: 2px;
    }

    .product-info {
        color: var(--light-text);
    }

    .rating-wrapper {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .stars {
        color: var(--primary-color);
        margin-right: 1rem;
    }

    .reviews-count {
        color: var(--secondary-text);
        font-size: 0.9rem;
        text-decoration: none;
        transition: var(--transition);
    }

    .reviews-count:hover {
        color: var(--primary-color);
    }

    .price-wrapper {
        display: flex;
        align-items: center;
        margin-bottom: 1.5rem;
    }

    .current-price {
        font-size: 2rem;
        font-weight: 700;
        color: var(--primary-color);
    }

    .old-price {
        font-size: 1.25rem;
        color: var(--secondary-text);
        text-decoration: line-through;
        margin-left: 1rem;
    }

    .product-description {
        color: var(--secondary-text);
        font-size: 1.1rem;
        line-height: 1.6;
        margin-bottom: 2rem;
    }

    .product-specs {
        background: rgba(255, 255, 255, 0.05);
        border-radius: 0.75rem;
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .spec-item {
        display: flex;
        justify-content: space-between;
        padding: 0.75rem 0;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .spec-item:last-child {
        border-bottom: none;
    }

    .spec-label {
        color: var(--secondary-text);
    }

    .spec-value {
        color: var(--light-text);
        font-weight: 500;
    }

    /* Action Buttons */
    .product-actions {
        display: flex;
        gap: 1rem;
        margin-top: 2rem;
    }

    .btn-primary-action {
        background-color: var(--primary-color);
        color: var(--dark-bg);
        font-weight: 700;
        padding: 1rem 2rem;
        border-radius: 2rem;
        border: none;
        flex-grow: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.75rem;
        transition: var(--transition);
        text-decoration: none;
        box-shadow: var(--shadow-sm);
        position: relative;
        overflow: hidden;
        z-index: 1;
    }

    .btn-primary-action::before {
        content: '';
        position: absolute;
        top: 0;
        left: -100%;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
        transition: 0.5s;
        z-index: -1;
    }

    .btn-primary-action:hover::before {
        left: 100%;
    }

    .btn-primary-action:hover {
        background-color: #eab308;
        transform: translateY(-3px);
        box-shadow: 0 7px 14px rgba(0, 0, 0, 0.15);
    }

    .btn-secondary-action {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 3.5rem;
        height: 3.5rem;
        border-radius: 50%;
        border: 2px solid rgba(255, 255, 255, 0.1);
        background: rgba(255, 255, 255, 0.05);
        color: var(--secondary-text);
        font-size: 1.25rem;
        transition: var(--transition);
        cursor: pointer;
    }

    .btn-secondary-action:hover {
        border-color: var(--primary-color);
        color: var(--primary-color);
        transform: translateY(-3px);
    }

    .btn-secondary-action.liked {
        background-color: rgba(239, 68, 68, 0.1);
        border-color: var(--danger-color);
        color: var(--danger-color);
    }

    /* Reviews Section */
    .reviews-container {
        background-color: var(--dark-bg);
        border-radius: 1.5rem;
        padding: 3rem;
        margin-bottom: 3rem;
        box-shadow: var(--shadow-lg);
    }

    .reviews-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }

    .reviews-title {
        font-size: 1.75rem;
        font-weight: 700;
        color: var(--light-text);
        position: relative;
        display: inline-block;
    }

    .reviews-title::after {
        content: '';
        display: block;
        width: 50%;
        height: 3px;
        background: var(--primary-color);
        margin-top: 0.5rem;
        border-radius: 1.5px;
    }

    .reviews-summary {
        display: flex;
        gap: 3rem;
        margin-bottom: 3rem;
        padding-bottom: 2rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
    }

    .rating-overview {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .average-rating {
        font-size: 4rem;
        font-weight: 700;
        color: var(--primary-color);
        line-height: 1;
    }

    .rating-stars {
        font-size: 1.5rem;
        color: var(--primary-color);
        margin: 0.5rem 0;
    }

    .rating-count {
        color: var(--secondary-text);
    }

    .rating-bars {
        flex-grow: 1;
    }

    .rating-bar {
        display: flex;
        align-items: center;
        margin-bottom: 0.75rem;
    }

    .rating-label {
        width: 80px;
        color: var(--secondary-text);
        font-size: 0.9rem;
    }

    .rating-progress {
        flex-grow: 1;
        height: 8px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 4px;
        margin: 0 1rem;
        overflow: hidden;
    }

    .rating-progress-fill {
        height: 100%;
        background: var(--primary-color);
        border-radius: 4px;
    }

    .rating-percent {
        width: 40px;
        text-align: right;
        color: var(--secondary-text);
        font-size: 0.9rem;
    }

    .leave-review-section {
        background: var(--card-bg);
        border-radius: 1rem;
        padding: 2rem;
        margin-bottom: 3rem;
    }

    .leave-review-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--light-text);
        margin-bottom: 1.5rem;
    }

    .review-form .form-control,
    .review-form .form-select {
        background-color: rgba(15, 23, 42, 0.6);
        border: 1px solid rgba(255, 255, 255, 0.1);
        color: var(--light-text);
        padding: 0.75rem 1rem;
        border-radius: 0.75rem;
    }

    .review-form .form-control:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 0.25rem rgba(250, 204, 21, 0.2);
    }

    .review-form .form-control::placeholder {
        color: rgba(255, 255, 255, 0.3);
    }

    .rating-input {
        display: flex;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }

    .rating-input .star {
        font-size: 1.75rem;
        color: rgba(255, 255, 255, 0.2);
        cursor: pointer;
        transition: var(--transition);
    }

    .rating-input .star:hover,
    .rating-input .star.hovered,
    .rating-input .star.selected {
        color: var(--primary-color);
    }

    .reviews-list {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .review-card {
        background: var(--card-bg);
        border-radius: 1rem;
        padding: 1.5rem;
        position: relative;
        transition: var(--transition);
    }

    .review-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--shadow-md);
    }

    .review-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .reviewer {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .reviewer-avatar {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: var(--primary-color);
        color: var(--dark-bg);
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
    }

    .reviewer-info {
        display: flex;
        flex-direction: column;
    }

    .reviewer-name {
        font-weight: 600;
        color: var(--light-text);
    }

    .review-date {
        font-size: 0.85rem;
        color: var(--secondary-text);
    }

    .review-rating {
        color: var(--primary-color);
    }

    .review-content {
        color: var(--light-text);
        line-height: 1.6;
    }

    .no-reviews-msg {
        text-align: center;
        padding: 2rem;
        color: var(--secondary-text);
        font-style: italic;
    }

    .no-reviews-msg i {
        font-size: 3rem;
        margin-bottom: 1rem;
        display: block;
    }

    /* Alert styling */
    .alert-custom {
        border-radius: 0.75rem;
        padding: 1rem 1.5rem;
        margin-bottom: 1.5rem;
        color: var(--light-text);
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .alert-custom i {
        font-size: 1.5rem;
    }

    .alert-custom-info {
        background-color: rgba(59, 130, 246, 0.2);
        border-left: 4px solid #3b82f6;
    }


</style>

@{
    var AverageRating = Model.Reviews.Any() ? Model.Reviews.Average(r => r.Rating) : 0;
    ViewData["Title"] = Model.Name;
    var userId = User?.FindFirst(ClaimTypes.NameIdentifier)?.Value;
    
    // Calculate rating distribution
    var ratingCounts = new int[5];
    var totalReviews = Model.Reviews?.Count() ?? 0;
    
    if (totalReviews > 0)
    {
        for (int i = 1; i <= 5; i++)
        {
            ratingCounts[i-1] = Model.Reviews.Count(r => r.Rating == i);
        }
    }
}

<!-- Product Showcase Section -->
<section class="container py-5">
    <div class="product-showcase">
        <div class="row gy-4">
            <!-- Product Image -->
            <div class="col-lg-5">
                <div class="product-image-wrapper">
                    <div class="product-badges">
                        <span class="product-badge badge-new">New</span>
                        @if (Model.StockQuantity > 0)
                        {
                            <span class="product-badge badge-stock">In Stock</span>
                        }
                        else
                        {
                            <span class="product-badge badge-out">Out of Stock</span>
                        }
                    </div>
                    <img src="/Images/@Model.ImageUrl" alt="@Model.Name" class="product-image" />
                </div>
            </div>
            
            <!-- Product Info -->
            <div class="col-lg-7 product-info">
                <h1 class="product-title">@Model.Name</h1>
                
                <!-- Rating -->
                <div class="rating-wrapper">
                    <div class="stars">
                        @for (int i = 1; i <= 5; i++)
                        {
                            <i class="fas fa-star @(i <= AverageRating ? "" : "text-secondary")"></i>
                        }
                    </div>
                    <a href="#reviews" class="reviews-count">
                        @if (totalReviews > 0)
                        {
                            <span>@totalReviews @(totalReviews == 1 ? "review" : "reviews")</span>
                        }
                        else
                        {
                            <span>No reviews yet</span>
                        }
                    </a>
                </div>
                
                <!-- Price -->
                <div class="price-wrapper">
                    <div class="current-price">$@Model.Price.ToString("N2")</div>
                    @if (new Random().Next(0, 2) == 0) // Simulating a discount for demo purposes
                    {
                        var originalPrice = Model.Price * 1.2m;
                        <div class="old-price">$@originalPrice.ToString("N2")</div>
                    }
                </div>
                
                <!-- Description -->
                <p class="product-description">@Model.Description</p>
                
                <!-- Specifications -->
                <div class="product-specs">
                    <div class="spec-item">
                        <span class="spec-label">Category</span>
                        <span class="spec-value">Electronics</span>
                    </div>
                    <div class="spec-item">
                        <span class="spec-label">Availability</span>
                        <span class="spec-value">
                            @if (Model.StockQuantity > 0)
                            {
                                <span class="text-success">In Stock (@Model.StockQuantity items)</span>
                            }
                            else
                            {
                                <span class="text-danger">Out of Stock</span>
                            }
                        </span>
                    </div>
                    <div class="spec-item">
                        <span class="spec-label">Shipping</span>
                        <span class="spec-value">Free shipping</span>
                    </div>
                </div>
                
                <!-- Product Actions -->
                <div class="product-actions">
                    @if (!User.IsInRole(UserRole.Admin) && Model.StockQuantity > 0)
                    {
                        <a class="btn-primary-action"
                           asp-action="Add"
                           asp-controller="ShoppingCart"
                           asp-route-id="@Model.Id">
                            <i class="bi bi-cart-plus"></i>
                            Add to Cart
                        </a>
                    }
                    else if (Model.StockQuantity <= 0)
                    {
                        <button class="btn-primary-action" disabled>
                            <i class="bi bi-exclamation-circle"></i>
                            Out of Stock
                        </button>
                    }
                    
                    <button class="btn-secondary-action" onclick="toggleWishList(@Model.Id)" title="Add to Wishlist">
                        <i class="bi bi-heart"></i>
                    </button>
                    
                    <button class="btn-secondary-action" title="Compare">
                        <i class="bi bi-arrow-left-right"></i>
                    </button>
                    
                    <button class="btn-secondary-action" title="Share">
                        <i class="bi bi-share"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</section>

<!-- Reviews Section -->
<section id="reviews" class="container py-4">
    <div class="reviews-container">
        <div class="reviews-header">
            <h2 class="reviews-title">Customer Reviews</h2>
        </div>

        <!-- Reviews Summary -->
        <div class="reviews-summary">
            <div class="rating-overview">
                <div class="average-rating">@AverageRating.ToString("0.0")</div>
                <div class="rating-stars">
                    @for (int i = 1; i <= 5; i++)
                    {
                        <i class="fas fa-star @(i <= AverageRating ? "" : "text-secondary")"></i>
                    }
                </div>
                <div class="rating-count">Based on @totalReviews @(totalReviews == 1 ? "review" : "reviews")</div>
            </div>
            
            <div class="rating-bars">
                @for (int i = 5; i >= 1; i--)
                {
                    var percent = totalReviews > 0 ? (ratingCounts[i-1] * 100) / totalReviews : 0;
                    
                    <div class="rating-bar">
                        <span class="rating-label">@i Star@(i != 1 ? "s" : "")</span>
                        <div class="rating-progress">
                            <div class="rating-progress-fill" style="width: @percent%"></div>
                        </div>
                        <span class="rating-percent">@percent%</span>
                    </div>
                }
            </div>
        </div>

        <!-- Leave a Review Section -->
        @if (User.Identity?.IsAuthenticated ?? false)
        {
            @if (Model.Reviews.Any(r => r.UserId.ToString() == userId))
            {
                <div class="alert-custom alert-custom-info">
                    <i class="bi bi-info-circle-fill"></i>
                    <div>
                        <strong>Thank you for your review!</strong> You have already submitted a review for this product.
                    </div>
                </div>
            }
            else
            {
                <div class="leave-review-section">
                    <h3 class="leave-review-title">Write a Review</h3>
                    <form asp-action="AddReview" asp-controller="Product" method="post" class="review-form">
                        <input type="hidden" name="id" value="@Model.Id" />
                        <input type="hidden" name="userName" value='@(User?.Identity?.Name ?? "Unknown")' />
                        <input type="hidden" name="userId" value='@userId' />

                        <div class="mb-3">
                            <label class="form-label">Your Rating</label>
                            <div class="rating-input" id="ratingStars">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <i class="bi bi-star-fill star" data-value="@i"></i>
                                }
                            </div>
                            <input type="hidden" name="Rating" id="RatingInput" required />
                        </div>

                        <div class="mb-3">
                            <label for="Comment" class="form-label">Your Review</label>
                            <textarea class="form-control" id="Comment" name="Comment" rows="4" placeholder="Share your thoughts about this product..."></textarea>
                        </div>

                        <button type="submit" class="btn-primary-action">
                            <i class="bi bi-send"></i>
                            Submit Review
                        </button>
                    </form>
                </div>
            }
        }
        else
        {
            <div class="alert-custom alert-custom-info">
                <i class="bi bi-info-circle-fill"></i>
                <div>
                    Please <a href="/Account/Login" class="text-warning">sign in</a> to leave a review.
                </div>
            </div>
        }

        <!-- Reviews List -->
        <div class="reviews-list mt-4">
            <h3 class="mb-4 text-light">Customer Feedback</h3>
            
            @if (Model.Reviews != null && Model.Reviews.Any())
            {
                @foreach (var review in Model.Reviews)
                {
                    <div class="review-card">
                        <div class="review-header">
                            <div class="reviewer">
                                <div class="reviewer-avatar">
                                    @(review.UserName.Length > 0 ? review.UserName[0].ToString().ToUpper() : "?")
                                </div>
                                <div class="reviewer-info">
                                    <span class="reviewer-name">@review.UserName</span>
                                    <span class="review-date">@review.CreatedAt.ToString("MMMM dd, yyyy")</span>
                                </div>
                            </div>
                            <div class="review-rating">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <i class="fas fa-star @(i <= review.Rating ? "" : "text-secondary")"></i>
                                }
                            </div>
                        </div>
                        <div class="review-content">
                            <p>@review.Comment</p>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="no-reviews-msg">
                    <i class="bi bi-chat-square-text"></i>
                    <p>No reviews yet. Be the first to share your experience with this product!</p>
                </div>
            }
        </div>
    </div>
</section>

@section scripts {
    <script>
        function toggleWishList(productId) {
            const wishlistBtn = event.currentTarget;
            wishlistBtn.classList.toggle('liked');
            
            const icon = wishlistBtn.querySelector('i');
            if (wishlistBtn.classList.contains('liked')) {
                icon.classList.remove('bi-heart');
                icon.classList.add('bi-heart-fill');
            } else {
                icon.classList.remove('bi-heart-fill');
                icon.classList.add('bi-heart');
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const stars = document.querySelectorAll("#ratingStars .star");
            const ratingInput = document.getElementById("RatingInput");

            stars.forEach(star => {
                star.addEventListener("mouseover", function () {
                    const value = parseInt(this.getAttribute("data-value"));
                    stars.forEach((s, i) => {
                        if (i < value) {
                            s.classList.add("hovered");
                        } else {
                            s.classList.remove("hovered");
                        }
                    });
                });

                star.addEventListener("mouseout", function () {
                    stars.forEach(s => s.classList.remove("hovered"));
                });

                star.addEventListener("click", function () {
                    const value = parseInt(this.getAttribute("data-value"));
                    ratingInput.value = value;
                    
                    stars.forEach((s, i) => {
                        if (i < value) {
                            s.classList.add("selected");
                        } else {
                            s.classList.remove("selected");
                        }
                    });
                });
            });
            
            // Smooth scroll to reviews section when clicking on review count link
            document.querySelector('a[href="#reviews"]').addEventListener('click', function(e) {
                e.preventDefault();
                document.querySelector('#reviews').scrollIntoView({
                    behavior: 'smooth'
                });
            });
        });
    </script>

    <partial name="_NotificationPartial" />
}
